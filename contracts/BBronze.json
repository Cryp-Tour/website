{
  "contractName": "BBronze",
  "abi": [
    {
      "inputs": [],
      "name": "getColor",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/balancer/BColor.sol\":\"BBronze\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"project:/contracts/balancer/BColor.sol\":{\"keccak256\":\"0x5b5c143fcc24f39fda124045f4a90ed3f858b62698aef399adbbfa42df54eac5\",\"license\":\"GNU\",\"urls\":[\"bzz-raw://ce9dab9da9e881e5a5cddbdbb0a4811704586de3b9f04c24983cb8d540b5586a\",\"dweb:/ipfs/QmbPiJQvq6fvcSYVBozkrtDzFk6ADk6s8B2eUETQZ2XzvY\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50607f80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80639a86139b14602d575b600080fd5b6542524f4e5a4560d01b60405190815260200160405180910390f3fea2646970667358221220114b6921099b0057bd1447d4798dec2c05b56ac774dcd8c5e8abf8b847be208864736f6c63430008060033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80639a86139b14602d575b600080fd5b6542524f4e5a4560d01b60405190815260200160405180910390f3fea2646970667358221220114b6921099b0057bd1447d4798dec2c05b56ac774dcd8c5e8abf8b847be208864736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:193:22",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:22",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:22"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:22",
                "type": ""
              }
            ],
            "src": "14:177:22"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 22,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "811:161:8:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "811:161:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;844:126;-1:-1:-1;;;844:126:8;;160:25:22;;;148:2;133:18;844:126:8;;;;;;",
  "source": "// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// SPDX-License-Identifier: GNU\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity 0.8.6;\n\nabstract contract BColor {\n    function getColor() virtual\n        external view\n        returns (bytes32);\n}\n\ncontract BBronze is BColor {\n    function getColor() override\n        external pure\n        returns (bytes32) {\n            return bytes32(\"BRONZE\");\n        }\n}\n",
  "sourcePath": "/Users/david/Dev/cryptour/contracts/contracts/balancer/BColor.sol",
  "ast": {
    "absolutePath": "project:/contracts/balancer/BColor.sol",
    "exportedSymbols": {
      "BBronze": [
        1758
      ],
      "BColor": [
        1743
      ]
    },
    "id": 1759,
    "license": "GNU",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1737,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "676:22:8"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 1743,
        "linearizedBaseContracts": [
          1743
        ],
        "name": "BColor",
        "nameLocation": "718:6:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "9a86139b",
            "id": 1742,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getColor",
            "nameLocation": "740:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:2:8"
            },
            "returnParameters": {
              "id": 1741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1740,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1742,
                  "src": "798:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1739,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "797:9:8"
            },
            "scope": 1743,
            "src": "731:76:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 1759,
        "src": "700:109:8",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1744,
              "name": "BColor",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1743,
              "src": "831:6:8"
            },
            "id": 1745,
            "nodeType": "InheritanceSpecifier",
            "src": "831:6:8"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1758,
        "linearizedBaseContracts": [
          1758,
          1743
        ],
        "name": "BBronze",
        "nameLocation": "820:7:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1742
            ],
            "body": {
              "id": 1756,
              "nodeType": "Block",
              "src": "921:49:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "42524f4e5a45",
                        "id": 1753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "950:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4163e3f7a99fc80b57ec838b307c7a27558a888bb048d8e4d5cc03e3134dee47",
                          "typeString": "literal_string \"BRONZE\""
                        },
                        "value": "BRONZE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4163e3f7a99fc80b57ec838b307c7a27558a888bb048d8e4d5cc03e3134dee47",
                          "typeString": "literal_string \"BRONZE\""
                        }
                      ],
                      "id": 1752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "942:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 1751,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "942:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:17:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1750,
                  "id": 1755,
                  "nodeType": "Return",
                  "src": "935:24:8"
                }
              ]
            },
            "functionSelector": "9a86139b",
            "id": 1757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getColor",
            "nameLocation": "853:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1747,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "864:8:8"
            },
            "parameters": {
              "id": 1746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "861:2:8"
            },
            "returnParameters": {
              "id": 1750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1757,
                  "src": "912:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "911:9:8"
            },
            "scope": 1758,
            "src": "844:126:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1759,
        "src": "811:161:8",
        "usedErrors": []
      }
    ],
    "src": "676:297:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-04-25T14:12:43.854Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}