{
  "contractName": "Deployer",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "instance",
          "type": "address"
        }
      ],
      "name": "InstanceDeployed",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"name\":\"InstanceDeployed\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Ocean Protocol Team\",\"details\":\"Contract Deployer      This contract allowes factory contract       to deploy new contract instances using      the same library pattern in solidity.      the logic it self is deployed only once, but      executed in the context of the new storage       contract (new contract instance)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Deployer Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ocean_utils/Deployer.sol\":\"Deployer\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"project:/contracts/ocean_utils/Deployer.sol\":{\"keccak256\":\"0xbd05a725c0a7788cb510c71b25ea83709dfc5f77f2d38763db365fa56f61c52a\",\"license\":\"(Apache-2.0 AND CC-BY-4.0)\",\"urls\":[\"bzz-raw://770f6ea1f9ed4647e58c4a1c036f17cba3005e1cf66264b3eeda34ceb5a48e4b\",\"dweb:/ipfs/QmWPvW7azh4EZg3iczvsB1Cqkc6FnkjBeG8LVDBpQj7qLL\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201bca8b5a2a9708622c88be1d05d94844db8153058b1ad1a1e8919f65d4a07e8f64736f6c63430008060033",
  "deployedBytecode": "0x6080604052600080fdfea26469706673582212201bca8b5a2a9708622c88be1d05d94844db8153058b1ad1a1e8919f65d4a07e8f64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "568:1217:21:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "568:1217:21:-:0;;;;;",
  "source": "pragma solidity 0.8.6;\n// Copyright BigchainDB GmbH and Ocean Protocol contributors\n// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\n// Code is Apache-2.0 and docs are CC-BY-4.0\n\n/**\n * @title Deployer Contract\n * @author Ocean Protocol Team\n *\n * @dev Contract Deployer\n *      This contract allowes factory contract \n *      to deploy new contract instances using\n *      the same library pattern in solidity.\n *      the logic it self is deployed only once, but\n *      executed in the context of the new storage \n *      contract (new contract instance)\n */\ncontract Deployer {\n    event InstanceDeployed(address instance);\n    \n    /**\n     * @dev deploy\n     *      deploy new contract instance \n     * @param _logic the logic contract address\n     * @return instance address of the new instance\n     */\n    function deploy(\n        address _logic\n    ) \n      internal \n      returns (address instance) \n    {\n        bytes20 targetBytes = bytes20(_logic);\n        // Follows OpenZeppelin Implementation https://github.com/OpenZeppelin/openzeppelin-sdk/blob/71c9ad77e0326db079e6a643eca8568ab316d4a9/packages/lib/contracts/upgradeability/ProxyFactory.sol\n        // Adapted from https://github.com/optionality/clone-factory/blob/32782f82dfc5a00d103a7e61a17a5dedbd1e8e9d/contracts/CloneFactory.sol\n        /* solium-disable-next-line security/no-inline-assembly */\n        assembly {\n          let clone := mload(0x40)\n          mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n          mstore(add(clone, 0x14), targetBytes)\n          mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n          instance := create(0, clone, 0x37)\n        }\n        emit InstanceDeployed(address(instance));\n    }\n}",
  "sourcePath": "/Users/david/Dev/cryptour/contracts/contracts/ocean_utils/Deployer.sol",
  "ast": {
    "absolutePath": "project:/contracts/ocean_utils/Deployer.sol",
    "exportedSymbols": {
      "Deployer": [
        7024
      ]
    },
    "id": 7025,
    "license": "(Apache-2.0 AND CC-BY-4.0)",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6994,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:21"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6995,
          "nodeType": "StructuredDocumentation",
          "src": "185:382:21",
          "text": " @title Deployer Contract\n @author Ocean Protocol Team\n @dev Contract Deployer\n      This contract allowes factory contract \n      to deploy new contract instances using\n      the same library pattern in solidity.\n      the logic it self is deployed only once, but\n      executed in the context of the new storage \n      contract (new contract instance)"
        },
        "fullyImplemented": true,
        "id": 7024,
        "linearizedBaseContracts": [
          7024
        ],
        "name": "Deployer",
        "nameLocation": "577:8:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 6999,
            "name": "InstanceDeployed",
            "nameLocation": "598:16:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6997,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "instance",
                  "nameLocation": "623:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 6999,
                  "src": "615:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "614:18:21"
            },
            "src": "592:41:21"
          },
          {
            "body": {
              "id": 7022,
              "nodeType": "Block",
              "src": "921:862:21",
              "statements": [
                {
                  "assignments": [
                    7008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7008,
                      "mutability": "mutable",
                      "name": "targetBytes",
                      "nameLocation": "939:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 7022,
                      "src": "931:19:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 7007,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "931:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7013,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7011,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7002,
                        "src": "961:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "953:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": {
                        "id": 7009,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "953:7:21",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 7012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:15:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "931:37:21"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1393:334:21",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1405:24:21",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1424:4:21",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1418:5:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1418:11:21"
                        },
                        "variables": [
                          {
                            "name": "clone",
                            "nodeType": "YulTypedName",
                            "src": "1409:5:21",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "1447:5:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1454:66:21",
                              "type": "",
                              "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1440:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1440:81:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1440:81:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "1543:5:21"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1550:4:21",
                                  "type": "",
                                  "value": "0x14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1539:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1539:16:21"
                            },
                            {
                              "name": "targetBytes",
                              "nodeType": "YulIdentifier",
                              "src": "1557:11:21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1532:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1532:37:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1532:37:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "1591:5:21"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1598:4:21",
                                  "type": "",
                                  "value": "0x28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1587:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1587:16:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1605:66:21",
                              "type": "",
                              "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1580:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1580:92:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1580:92:21"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1683:34:21",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1702:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "1705:5:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1712:4:21",
                              "type": "",
                              "value": "0x37"
                            }
                          ],
                          "functionName": {
                            "name": "create",
                            "nodeType": "YulIdentifier",
                            "src": "1695:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1695:22:21"
                        },
                        "variableNames": [
                          {
                            "name": "instance",
                            "nodeType": "YulIdentifier",
                            "src": "1683:8:21"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "berlin",
                  "externalReferences": [
                    {
                      "declaration": 7005,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1683:8:21",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7008,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1557:11:21",
                      "valueSize": 1
                    }
                  ],
                  "id": 7014,
                  "nodeType": "InlineAssembly",
                  "src": "1384:343:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7018,
                            "name": "instance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7005,
                            "src": "1766:8:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1758:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7016,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1758:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1758:17:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7015,
                      "name": "InstanceDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6999,
                      "src": "1741:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1741:35:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7021,
                  "nodeType": "EmitStatement",
                  "src": "1736:40:21"
                }
              ]
            },
            "documentation": {
              "id": 7000,
              "nodeType": "StructuredDocumentation",
              "src": "643:172:21",
              "text": " @dev deploy\n      deploy new contract instance \n @param _logic the logic contract address\n @return instance address of the new instance"
            },
            "id": 7023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nameLocation": "829:6:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7002,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "853:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 7023,
                  "src": "845:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:30:21"
            },
            "returnParameters": {
              "id": 7006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7005,
                  "mutability": "mutable",
                  "name": "instance",
                  "nameLocation": "906:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 7023,
                  "src": "898:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "897:18:21"
            },
            "scope": 7024,
            "src": "820:963:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 7025,
        "src": "568:1217:21",
        "usedErrors": []
      }
    ],
    "src": "0:1785:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-04-25T14:12:43.888Z",
  "devdoc": {
    "author": "Ocean Protocol Team",
    "details": "Contract Deployer      This contract allowes factory contract       to deploy new contract instances using      the same library pattern in solidity.      the logic it self is deployed only once, but      executed in the context of the new storage       contract (new contract instance)",
    "kind": "dev",
    "methods": {},
    "title": "Deployer Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}